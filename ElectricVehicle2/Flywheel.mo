within ElectricVehicle2;
package Flywheel

  model Flywheel
    Modelica.Mechanics.Rotational.Interfaces.Flange_a flange_a
      annotation (Placement(transformation(extent={{110,-10},{130,10}})));
    Modelica.Mechanics.Rotational.Components.Inertia inertia(J=100, w(start=
            initFlyVel, fixed=true))
      annotation (Placement(transformation(extent={{-10,-10},{10,10}},
          rotation=180,
          origin={-14,0})));
    Modelica.Mechanics.Rotational.Components.Fixed fixed
      annotation (Placement(transformation(extent={{70,-90},{90,-70}})));
    Modelica.Blocks.Interfaces.RealInput clutchSignal
      annotation (Placement(transformation(extent={{-160,40},{-120,80}})));
    Modelica.Blocks.Interfaces.RealInput lockSignal
      annotation (Placement(transformation(extent={{-160,-80},{-120,-40}})));
    Modelica.Mechanics.Rotational.Sensors.SpeedSensor speedSensor annotation (
       Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=180,
          origin={-80,0})));
    Modelica.Blocks.Interfaces.RealOutput AngularVelFly annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=180,
          origin={-130,0})));
    Modelica.Mechanics.Rotational.Components.Clutch clutch(fn_max=9999999)
      annotation (Placement(transformation(extent={{30,-10},{50,10}})));
    Modelica.Mechanics.Rotational.Components.Inertia inertia1(J=0.001)
      annotation (Placement(transformation(extent={{-10,-10},{10,10}},
          rotation=180,
          origin={82,0})));
    Modelica.Mechanics.Rotational.Components.Clutch clutch1(fn_max=9999999)
      annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={80,-60})));
  equation
    connect(AngularVelFly, speedSensor.w)
      annotation (Line(points={{-130,0},{-91,0}}, color={0,0,127}));
    connect(speedSensor.flange, inertia.flange_b)
      annotation (Line(points={{-70,0},{-24,0}}, color={0,0,0}));
    connect(inertia.flange_a, clutch.flange_a) annotation (Line(points={{-4,
            -1.72085e-15},{14,-1.72085e-15},{14,0},{30,0}}, color={0,0,0}));
    connect(clutchSignal, clutch.f_normalized)
      annotation (Line(points={{-140,60},{40,60},{40,11}}, color={0,0,127}));
    connect(flange_a, inertia1.flange_a) annotation (Line(points={{120,0},{
            106,0},{106,-1.72085e-15},{92,-1.72085e-15}}, color={0,0,0}));
    connect(inertia1.flange_b, clutch.flange_b)
      annotation (Line(points={{72,0},{50,0}}, color={0,0,0}));
    connect(fixed.flange, clutch1.flange_a)
      annotation (Line(points={{80,-80},{80,-70}}, color={0,0,0}));
    connect(lockSignal, clutch1.f_normalized)
      annotation (Line(points={{-140,-60},{69,-60}}, color={0,0,127}));
    connect(clutch1.flange_b, clutch.flange_b) annotation (Line(points={{80,
            -50},{80,-30},{64,-30},{64,0},{50,0}}, color={0,0,0}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Ellipse(
            extent={{-80,80},{80,-80}},
            lineColor={135,135,135},
            fillColor={215,215,215},
            fillPattern=FillPattern.Sphere)}),Diagram(coordinateSystem(
            preserveAspectRatio=false)));
  end Flywheel;

  model flywheelController
    Modelica.Blocks.Interfaces.RealInput velocityRequest annotation (
        Placement(transformation(extent={{-260,40},{-220,80}}),
          iconTransformation(extent={{-260,40},{-220,80}})));
    Modelica.Blocks.Continuous.Derivative derivative
      annotation (Placement(transformation(extent={{-194,50},{-174,70}})));
    Modelica.Blocks.Logical.LessThreshold brake(threshold=0)
                                                annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={-150,40})));
    Modelica.Blocks.Logical.GreaterThreshold accel(threshold=0)
                                                   annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={-150,80})));
    Modelica.Blocks.Interfaces.RealInput vehicleVelocity annotation (
        Placement(transformation(extent={{-260,-80},{-220,-40}}),
          iconTransformation(extent={{-260,-80},{-220,-40}})));
    Modelica.Blocks.Logical.Greater rotSpeed annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={-150,-30})));
    Modelica.Blocks.Logical.LessEqualThreshold flyIsZero annotation (
        Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={-150,0})));
    Modelica.Blocks.Logical.LessEqualThreshold carIsZero annotation (
        Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={-150,-60})));
    Modelica.Blocks.Interfaces.RealOutput clutchSignal annotation (Placement(
          transformation(extent={{220,50},{240,70}}), iconTransformation(
            extent={{220,50},{240,70}})));
    Modelica.Blocks.Interfaces.RealOutput lockSignal annotation (Placement(
          transformation(extent={{220,-70},{240,-50}}), iconTransformation(
            extent={{220,-70},{240,-50}})));
    Common.notEqual flip
      annotation (Placement(transformation(extent={{120,-90},{140,-70}})));
    Common.notEqual flip1
      annotation (Placement(transformation(extent={{120,30},{140,50}})));
    Common.B2V b2V
      annotation (Placement(transformation(extent={{66,38},{78,42}})));
    Common.V2S v2S
      annotation (Placement(transformation(extent={{88,38},{100,42}})));
    Common.B2V b2V1
      annotation (Placement(transformation(extent={{66,-82},{78,-78}})));
    Common.V2S v2S1
      annotation (Placement(transformation(extent={{88,-82},{100,-78}})));
    Common.Equal equal
      annotation (Placement(transformation(extent={{120,70},{140,90}})));
    Common.Equal equal1
      annotation (Placement(transformation(extent={{120,-50},{140,-30}})));
    Common.B2V b2V2
      annotation (Placement(transformation(extent={{66,78},{78,82}})));
    Common.V2S v2S2
      annotation (Placement(transformation(extent={{88,78},{100,82}})));
    Common.B2V b2V3
      annotation (Placement(transformation(extent={{66,-42},{78,-38}})));
    Common.V2S v2S3
      annotation (Placement(transformation(extent={{88,-42},{100,-38}})));
    Modelica.Blocks.Math.Add add
      annotation (Placement(transformation(extent={{166,50},{186,70}})));
    Modelica.Blocks.Math.Add add1
      annotation (Placement(transformation(extent={{168,-70},{188,-50}})));
    Modelica.Blocks.MathBoolean.Or or1(nu=2)
      annotation (Placement(transformation(extent={{20,70},{40,90}})));
    Modelica.Blocks.MathBoolean.Or or2(nu=3)
      annotation (Placement(transformation(extent={{20,30},{40,50}})));
    Modelica.Blocks.MathBoolean.Or or3(nu=3)
      annotation (Placement(transformation(extent={{20,-50},{40,-30}})));
    Modelica.Blocks.MathBoolean.Or or4(nu=2)
      annotation (Placement(transformation(extent={{20,-90},{40,-70}})));
    Modelica.Blocks.Logical.And AB
      annotation (Placement(transformation(extent={{-60,70},{-40,90}})));
    Modelica.Blocks.Logical.Not not1
      annotation (Placement(transformation(extent={{-120,-10},{-100,10}})));
    Modelica.Blocks.Logical.And C
      annotation (Placement(transformation(extent={{-60,30},{-40,50}})));
    Modelica.Blocks.Logical.Nor nor
      annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));
    Modelica.Blocks.Logical.Not not2
      annotation (Placement(transformation(extent={{-120,-70},{-100,-50}})));
    Modelica.Blocks.Logical.And DE
      annotation (Placement(transformation(extent={{-60,-50},{-40,-30}})));
    Modelica.Blocks.Logical.And F
      annotation (Placement(transformation(extent={{-60,-90},{-40,-70}})));
    Modelica.Blocks.Interfaces.RealInput flywheelVelocity annotation (
        Placement(transformation(
          extent={{-20,-20},{20,20}},
          rotation=180,
          origin={240,0})));
  equation
    connect(velocityRequest, derivative.u)
      annotation (Line(points={{-240,60},{-196,60}}, color={0,0,127}));
    connect(derivative.y, brake.u) annotation (Line(points={{-173,60},{-168,
            60},{-168,40},{-162,40}}, color={0,0,127}));
    connect(accel.u, brake.u) annotation (Line(points={{-162,80},{-168,80},{
            -168,40},{-162,40}}, color={0,0,127}));
    connect(vehicleVelocity, rotSpeed.u2) annotation (Line(points={{-240,-60},
            {-194,-60},{-194,-38},{-162,-38}}, color={0,0,127}));
    connect(carIsZero.u, rotSpeed.u2) annotation (Line(points={{-162,-60},{
            -194,-60},{-194,-38},{-162,-38}}, color={0,0,127}));
    connect(flyIsZero.u, rotSpeed.u1) annotation (Line(points={{-162,0},{-194,
            0},{-194,-30},{-162,-30}}, color={0,0,127}));
    connect(flip1.u, v2S.y)
      annotation (Line(points={{116,40},{103,40}}, color={0,0,127}));
    connect(v2S.pin, b2V.pin)
      annotation (Line(points={{86,40},{80,40}}, color={0,0,255}));
    connect(v2S1.pin, b2V1.pin)
      annotation (Line(points={{86,-80},{80,-80}}, color={0,0,255}));
    connect(v2S1.y, flip.u)
      annotation (Line(points={{103,-80},{116,-80}}, color={0,0,127}));
    connect(v2S2.pin, b2V2.pin)
      annotation (Line(points={{86,80},{80,80}}, color={0,0,255}));
    connect(v2S3.pin, b2V3.pin)
      annotation (Line(points={{86,-40},{80,-40}}, color={0,0,255}));
    connect(v2S3.y, equal1.u)
      annotation (Line(points={{103,-40},{116,-40}}, color={0,0,127}));
    connect(v2S2.y, equal.u)
      annotation (Line(points={{103,80},{116,80}}, color={0,0,127}));
    connect(add.y, clutchSignal)
      annotation (Line(points={{187,60},{230,60}}, color={0,0,127}));
    connect(equal.y, add.u1) annotation (Line(points={{143,80},{152,80},{152,
            66},{164,66}}, color={0,0,127}));
    connect(flip1.y, add.u2) annotation (Line(points={{143,40},{152,40},{152,
            54},{164,54}}, color={0,0,127}));
    connect(equal1.y, add1.u1) annotation (Line(points={{143,-40},{154.5,-40},
            {154.5,-54},{166,-54}}, color={0,0,127}));
    connect(flip.y, add1.u2) annotation (Line(points={{143,-80},{154,-80},{
            154,-66},{166,-66}}, color={0,0,127}));
    connect(add1.y, lockSignal)
      annotation (Line(points={{189,-60},{230,-60}}, color={0,0,127}));
    connect(b2V2.u, or1.y)
      annotation (Line(points={{62,80},{41.5,80}}, color={255,0,255}));
    connect(b2V.u, or2.y)
      annotation (Line(points={{62,40},{41.5,40}}, color={255,0,255}));
    connect(b2V3.u, or3.y)
      annotation (Line(points={{62,-40},{41.5,-40}}, color={255,0,255}));
    connect(or4.y, b2V1.u)
      annotation (Line(points={{41.5,-80},{62,-80}}, color={255,0,255}));
    connect(accel.y, AB.u1)
      annotation (Line(points={{-139,80},{-62,80}}, color={255,0,255}));
    connect(flyIsZero.y, not1.u)
      annotation (Line(points={{-139,0},{-122,0}}, color={255,0,255}));
    connect(not1.y, AB.u2) annotation (Line(points={{-99,0},{-90,0},{-90,72},
            {-62,72}}, color={255,0,255}));
    connect(AB.y, or1.u[1]) annotation (Line(points={{-39,80},{0,80},{0,83.5},
            {20,83.5}}, color={255,0,255}));
    connect(or4.u[1], AB.y) annotation (Line(points={{20,-76.5},{0,-76.5},{0,
            80},{-39,80}}, color={255,0,255}));
    connect(C.u1, AB.u1) annotation (Line(points={{-62,40},{-100,40},{-100,80},
            {-62,80}}, color={255,0,255}));
    connect(C.u2, not1.u) annotation (Line(points={{-62,32},{-130,32},{-130,0},
            {-122,0}}, color={255,0,255}));
    connect(or2.u[1], C.y) annotation (Line(points={{20,44.6667},{-10,44.6667},
            {-10,40},{-39,40}}, color={255,0,255}));
    connect(nor.u1, AB.u1) annotation (Line(points={{-62,0},{-70,0},{-70,80},
            {-62,80}}, color={255,0,255}));
    connect(nor.u2, brake.y) annotation (Line(points={{-62,-8},{-80,-8},{-80,
            26},{-120,26},{-120,40},{-139,40}}, color={255,0,255}));
    connect(nor.y, or2.u[2]) annotation (Line(points={{-39,0},{-10,0},{-10,40},
            {20,40}}, color={255,0,255}));
    connect(or3.u[1], C.y) annotation (Line(points={{20,-35.3333},{-26,
            -35.3333},{-26,40},{-39,40}}, color={255,0,255}));
    connect(or3.u[2], nor.y) annotation (Line(points={{20,-40},{-10,-40},{-10,
            0},{-39,0}}, color={255,0,255}));
    connect(carIsZero.y, not2.u)
      annotation (Line(points={{-139,-60},{-122,-60}}, color={255,0,255}));
    connect(DE.u1, brake.y) annotation (Line(points={{-62,-40},{-80,-40},{-80,
            26},{-120,26},{-120,40},{-139,40}}, color={255,0,255}));
    connect(not2.y, DE.u2) annotation (Line(points={{-99,-60},{-90,-60},{-90,
            -48},{-62,-48}}, color={255,0,255}));
    connect(F.u1, brake.y) annotation (Line(points={{-62,-80},{-80,-80},{-80,
            26},{-120,26},{-120,40},{-139,40}}, color={255,0,255}));
    connect(F.u2, not2.u) annotation (Line(points={{-62,-88},{-130,-88},{-130,
            -60},{-122,-60}}, color={255,0,255}));
    connect(DE.y, or4.u[2]) annotation (Line(points={{-39,-40},{-14,-40},{-14,
            -83.5},{20,-83.5}}, color={255,0,255}));
    connect(or1.u[2], DE.y) annotation (Line(points={{20,76.5},{-14,76.5},{
            -14,-40},{-39,-40}}, color={255,0,255}));
    connect(F.y, or3.u[3]) annotation (Line(points={{-39,-80},{-4,-80},{-4,
            -44.6667},{20,-44.6667}}, color={255,0,255}));
    connect(or2.u[3], F.y) annotation (Line(points={{20,35.3333},{-4,35.3333},
            {-4,-80},{-39,-80}}, color={255,0,255}));
    connect(flywheelVelocity, rotSpeed.u1) annotation (Line(points={{240,
            -1.11022e-15},{60,-1.11022e-15},{60,20},{-194,20},{-194,-30},{
            -162,-30}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
              -200,-100},{200,100}}), graphics={Bitmap(
            extent={{-200,-100},{200,100}},
            imageSource=
                ""
                 +
                ""
                 +
                "OmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO21hcmtlcjpub25lO21hcmtlci1zdGFydDpub25lO21hcmtlci1taWQ6bm9uZTttYXJrZXItZW5kOm5vbmU7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLWRhc2hvZmZzZXQ6MDtzdHJva2Utb3BhY2l0eToxO3Zpc2liaWxpdHk6dmlzaWJsZTtkaXNwbGF5OmlubGluZTtvdmVyZmxvdzp2aXNpYmxlO2VuYWJsZS1iYWNrZ3JvdW5kOmFjY3VtdWxhdGUiIC8+CiAgICAgICAgPHBhdGgKICAgICAgICAgICBpZD0icGF0aDI2ODMiCiAgICAgICAgICAgZD0iTSAyNTcuMzM4Miw0ODkuMzUyMTEgTCAyNzMuNjcwMTMsNDg0LjQ5NjY3IEwgMjcxLjkwNDUxLDQwMi4xNzQ5MyBMIDI1Ni4yMzQ2OSw0MDcuNjkyNDcgTCAyNTcuMzM4Miw0ODkuMzUyMTEgeiAiCiAgICAgICAgICAgc3R5bGU9ImNvbG9yOiMwMDAwMDA7ZmlsbDojY2NjY2NjO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDowLjM1NDMzMDcyO3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO21hcmtlcjpub25lO21hcmtlci1zdGFydDpub25lO21hcmtlci1taWQ6bm9uZTttYXJrZXItZW5kOm5vbmU7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLWRhc2hvZmZzZXQ6MDtzdHJva2Utb3BhY2l0eToxO3Zpc2liaWxpdHk6dmlzaWJsZTtkaXNwbGF5OmlubGluZTtvdmVyZmxvdzp2aXNpYmxlO2VuYWJsZS1iYWNrZ3JvdW5kOmFjY3VtdWxhdGUiIC8+CiAgICAgIDwvZz4KICAgICAgPHBhdGgKICAgICAgICAgc29kaXBvZGk6bm9kZXR5cGVzPSJjY2NjY2MiCiAgICAgICAgIGlkPSJwYXRoMjIxOCIKICAgICAgICAgZD0iTSAxNDUuNDg1MTgsMzMyLjAwMjAxIEwgMTQ2LjM5MDQ3LDM5NC40MDM4NSBMIDE0My44OTMxNCwzOTQuNTI4NzEgTCAxMzguMDI0NDUsMzg5LjIyMTkxIEwgMTM3LjE1MDM4LDMzNy4yNDYzOCBMIDE0NS40ODUxOCwzMzIuMDAyMDEgeiAiCiAgICAgICAgIHN0eWxlPSJjb2xvcjojMDAwMDAwO2ZpbGw6I2IzYjNiMztmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MC40MDA5Mzg0MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDttYXJrZXI6bm9uZTttYXJrZXItc3RhcnQ6bm9uZTttYXJrZXItbWlkOm5vbmU7bWFya2VyLWVuZDpub25lO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1kYXNob2Zmc2V0OjA7c3Ryb2tlLW9wYWNpdHk6MTt2aXNpYmlsaXR5OnZpc2libGU7ZGlzcGxheTppbmxpbmU7b3ZlcmZsb3c6dmlzaWJsZTtlbmFibGUtYmFja2dyb3VuZDphY2N1bXVsYXRlIiAvPgogICAgICA8cGF0aAogICAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9ImNjY2NjIgogICAgICAgICBpZD0icGF0aDI0MzAiCiAgICAgICAgIGQ9Ik0gMjguNTExNzk3LDM0MC42OTYzNCBMIDI5Ljc2OTk4MywzNDIuNjgyOTYgTCAxNDMuNjY4ODIsMzk0LjQyMzA0IEwgMTM3Ljg0MTQ1LDM4OS4xMjU0MiBMIDI4LjUxMTc5NywzNDAuNjk2MzQgeiAiCiAgICAgICAgIHN0eWxlPSJjb2xvcjojMDAwMDAwO2ZpbGw6IzgwODA4MDtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MC40MDA5Mzg0MjtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjpyb3VuZDttYXJrZXI6bm9uZTttYXJrZXItc3RhcnQ6bm9uZTttYXJrZXItbWlkOm5vbmU7bWFya2VyLWVuZDpub25lO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1kYXNob2Zmc2V0OjA7c3Ryb2tlLW9wYWNpdHk6MTt2aXNpYmlsaXR5OnZpc2libGU7ZGlzcGxheTppbmxpbmU7b3ZlcmZsb3c6dmlzaWJsZTtlbmFibGUtYmFja2dyb3VuZDphY2N1bXVsYXRlIiAvPgogICAgICA8cGF0aAogICAgICAgICBzb2RpcG9kaTpub2RldHlwZXM9ImNjY2NjY2NjYyIKICAgICAgICAgaWQ9InBhdGgyMjAyIgogICAgICAgICBkPSJNIDI5LjExOTk5NSwyODAuNjk3MDQgTCA2MS45NzA5NzUsMjk1LjE5Njc4IEwgMTA4LjI3NDczLDI4Mi42MzUzOCBMIDE1OC40NzQxNSwzMDQuMTYxMTcgTCAxMTEuNDE1NDksMzE2Ljk5NTgzIEwgMTQ1LjU5MDk5LDMzMS44NzgxOSBMIDY5MS42Mjc5NiwxODAuNDU2MDggTCA1NzIuNTc3NDksMTMzLjAwMjQgTCAyOS4xMTk5OTUsMjgwLjY5NzA0IHogIgogICAgICAgICBzdHlsZT0iY29sb3I6IzAwMDAwMDtmaWxsOiM0ZDRkNGQ7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjAuNDAwOTM4NDI7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46cm91bmQ7bWFya2VyOm5vbmU7bWFya2VyLXN0YXJ0Om5vbmU7bWFya2VyLW1pZDpub25lO21hcmtlci1lbmQ6bm9uZTtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1kYXNoYXJyYXk6bm9uZTtzdHJva2UtZGFzaG9mZnNldDowO3N0cm9rZS1vcGFjaXR5OjE7dmlzaWJpbGl0eTp2aXNpYmxlO2Rpc3BsYXk6aW5saW5lO292ZXJmbG93OnZpc2libGU7ZW5hYmxlLWJhY2tncm91bmQ6YWNjdW11bGF0ZSIgLz4KICAgIDwvZz4KICA8L2c+Cjwvc3ZnPgo=",
            fileName=
                "modelica://ElectricVehicle/../../../../../Desktop/11971212891539199094aram_circuito_integrado.svg")}),
        Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-200,
              -100},{200,100}})));
  end flywheelController;
  annotation (Icon(graphics={
          Ellipse(
          extent={{-80,80},{80,-80}},
          lineColor={135,135,135},
          fillColor={215,215,215},
          fillPattern=FillPattern.Sphere)}));
end Flywheel;
